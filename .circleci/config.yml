version: 2.1
orbs:
  aws-eks: circleci/aws-eks@0.2.3
  kubernetes: circleci/kubernetes@0.4.0

                                            
commands:
  install_awscli:
    description: Install AWS CLI v2
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            ./aws/install 
  install_nodejs:
    description: Install Node.js 13
    steps:
      - run:
          name: Install Node.js 13
          command: |
            curl -fsSL https://deb.nodesource.com/setup_13.x | sudo -E bash -
            apt install -y nodejs
  install_aws_eks:
    description: Install eksctl binaries
    steps:
      - run:
          name: Install eksctl binaries
          command: |
            curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/latest_release/eksctl_$(uname -s)_amd64.tar.gz" | gtar xz -C /tmp
            mv /tmp/eksctl /usr/local/bin
            eksctl version
  install_kubectl:
    description:
    steps:
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
            install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
            kubectl version --client
jobs:
  test-phase:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
  build-upload-image:
    docker:
      - image: circleci/golang:1.15
    working_directory: ~/repo
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build docker image
          command: |
            docker build --tag=myproject .
            docker images ls
            docker login -u="$DOCKER_USER" -p="$DOCKER_PASSWD"
            docker tag myproject src1307/myproject:v1
            docker push src1307/myproject:v1
  deploy-eks-cluster:
    docker:
      - image: python:3.7-alpine3.11
    steps:
      - checkout
      - run:
          name: Install tar and gzip
          command: |
            apk add --update tar gzip nodejs npm curl gtar 
      - install_awscli
        # - install_nodejs
        #    - install_aws_eks
        #- install_kubectl
      - run:
          name: AWS EKS cluster creation
          command: |
            eksctl create cluster --name eks-cluster-capstone --region us-east-1
            eksctl utils describe-stacks --region us-east-1 --cluster=eks-cluster-capstone
            eksctl get cluster --name=eks-cluster-capstone --region=us-east-1
      - run:
          name: Deploy docker image in EKS Cluster
          command: |
            kubectl get nodes
            kubectl create deployment udacityp5 --image=src1307/myproject:v1 
            kubectl expose deployment/udacityp5 --type="LoadBalancer" --port 80
            kubectl get all

workflows:
  default:
      jobs:
        - test-phase  
        - build-upload-image:
            requires: [test-phase]
        - deploy-eks-cluster:
            requires: [build-upload-image]
